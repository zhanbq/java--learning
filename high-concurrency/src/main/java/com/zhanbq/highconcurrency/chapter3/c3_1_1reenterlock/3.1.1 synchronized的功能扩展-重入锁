ReentrantLock的几个重要的方法整理如下:
 lock() 获得锁,如果锁已经被占用,则等待
 lockInterruptibly() 获得锁,但优先响应中断
 tryLock() 尝试获得所,如果成功,返回true 失败返回false
 tryLock(long time, TimeUnit unit) 在给定的时间内尝试获得锁
 unlock() 释放锁
 
 就重入锁的实现来看,他主要集中在java层面,在重入锁的实现中,主要办函三个要素:
 	第一,是原子状态. 原子状态使用cas操作来存储当前锁的状态,判断锁是
 	否已经被别的线程持有

 	第二,是等待队列.所有没有请求到锁的线程,会进入等待队列进行等待.带有线程
 	释放锁后,系统就能从等待队列中唤醒一个线程,继续工作.
 	
 	第三,是阻塞原语park()和unpark(),用来挂起和恢复线程.没有得到锁的线程会被挂起.
 	
 	